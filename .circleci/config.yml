version: 2
jobs:

  security-checks:
    working_directory: ~/repo
    docker:
      - image: docker:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          command: sh ci/security-checks.sh
      - store_artifacts:
          path: /tmp/artifacts/hawkeye_report.json

  build:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7
    environment:
      PIPENV_VENV_IN_PROJECT: true

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: install dependencies
          command: |  # use pipenv to install dependencies
                      sudo pip install pipenv
                      pipenv install --dev
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}

  test:
    working_directory: ~/repo
    docker:
      - image: circleci/python:3.7
    environment:
      PIPENV_VENV_IN_PROJECT: true

    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib/python3.7/site-packages
      - restore_cache:
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: install dependencies
          command: |  # use pipenv to install dependencies
                      sudo pip install pipenv
                      pipenv install --dev
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Pipfile.lock" }}
      - run:
          name: run tests
          command: |
            mkdir ~/repo/test-reports
            pipenv run pytest -v --junitxml=~/repo/test-reports/junit.xml

workflows:
  version: 2
  build-test:
    jobs:
      - security-checks:
          filters:
            branches:
              only: master
      - build:
          requires:
            - security-checks
          filters:
            branches:
              only: master
      - test:
          requires:
            - build
          filters:
            branches:
              only: master
